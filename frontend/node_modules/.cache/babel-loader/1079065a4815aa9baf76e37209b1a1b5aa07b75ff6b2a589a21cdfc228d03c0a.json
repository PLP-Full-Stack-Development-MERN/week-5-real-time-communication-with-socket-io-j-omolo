{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\socket\\\\frontend\\\\src\\\\pages\\\\NoteRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { Box, Paper, TextField, Typography, Chip, Snackbar, Alert, Grid, Button, List, ListItem, ListItemText, Divider, Select, MenuItem, FormControl, InputLabel, IconButton, Tooltip } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SendIcon from '@mui/icons-material/Send';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:5000';\nfunction NoteRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [note, setNote] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [isPrivateMessage, setIsPrivateMessage] = useState(false);\n  const noteRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Get username from localStorage or prompt for it\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    } else {\n      const newUsername = prompt('Please enter your username:');\n      if (newUsername) {\n        setUsername(newUsername);\n        localStorage.setItem('username', newUsername);\n      }\n    }\n    const newSocket = io(SOCKET_URL);\n    setSocket(newSocket);\n\n    // Join room with username\n    newSocket.emit('join-room', {\n      roomId,\n      username\n    });\n\n    // Fetch initial note content\n    fetch(`http://localhost:5000/api/notes/${roomId}`).then(res => res.json()).then(data => setNote(data.content || '')).catch(err => console.error('Error fetching note:', err));\n\n    // Fetch initial chat messages\n    fetch(`http://localhost:5000/api/chat/${roomId}`).then(res => res.json()).then(data => setMessages(data)).catch(err => console.error('Error fetching chat messages:', err));\n\n    // Listen for note updates\n    newSocket.on('note-updated', data => {\n      setNote(data.content);\n    });\n\n    // Listen for user join notifications\n    newSocket.on('user-joined', data => {\n      setNotification({\n        open: true,\n        message: `${data.username} joined the room`,\n        severity: 'info'\n      });\n    });\n\n    // Listen for user leave notifications\n    newSocket.on('user-left', data => {\n      setNotification({\n        open: true,\n        message: `${data.username} left the room`,\n        severity: 'info'\n      });\n    });\n\n    // Listen for room users updates\n    newSocket.on('room-users', users => {\n      setOnlineUsers(users.filter(user => user.userId !== newSocket.id));\n    });\n\n    // Listen for new chat messages\n    newSocket.on('new-chat-message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, [roomId, username]);\n  const handleNoteChange = e => {\n    const newContent = e.target.value;\n    setNote(newContent);\n    if (socket) {\n      socket.emit('note-update', {\n        roomId,\n        content: newContent\n      });\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim() && socket && username) {\n      socket.emit('chat-message', {\n        roomId,\n        userId: socket.id,\n        username,\n        message: newMessage.trim(),\n        isPrivate: isPrivateMessage,\n        recipientId: isPrivateMessage ? selectedUser : null\n      });\n      setNewMessage('');\n      setIsPrivateMessage(false);\n      setSelectedUser('');\n    }\n  };\n  const copyRoomId = () => {\n    navigator.clipboard.writeText(roomId);\n    setNotification({\n      open: true,\n      message: 'Room ID copied to clipboard!',\n      severity: 'success'\n    });\n  };\n  const formatMessage = msg => {\n    if (msg.isPrivate) {\n      return `[Private to ${msg.recipientUsername}] ${msg.message}`;\n    }\n    return msg.message;\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      height: 'calc(100vh - 100px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            icon: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this),\n            label: \"Copy Room ID\",\n            onClick: copyRoomId,\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            fullWidth: true,\n            value: note,\n            onChange: handleNoteChange,\n            variant: \"outlined\",\n            placeholder: \"Start typing your note...\",\n            sx: {\n              flex: 1\n            },\n            inputRef: noteRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            p: 2,\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Online Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: onlineUsers.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Send Private Message\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: () => {\n                    setSelectedUser(user.userId);\n                    setIsPrivateMessage(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(LockIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, user.userId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            flex: 1,\n            overflow: 'auto',\n            p: 2\n          },\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  color: \"primary\",\n                  children: [msg.username, msg.isPrivate && /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: \"Private\",\n                    color: \"secondary\",\n                    sx: {\n                      ml: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: formatMessage(msg)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSendMessage,\n          sx: {\n            p: 2,\n            borderTop: 1,\n            borderColor: 'divider'\n          },\n          children: [isPrivateMessage && /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            size: \"small\",\n            sx: {\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Send to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedUser,\n              label: \"Send to\",\n              onChange: e => setSelectedUser(e.target.value),\n              children: onlineUsers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: user.userId,\n                children: user.username\n              }, user.userId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: isPrivateMessage ? \"Type a private message...\" : \"Type a message...\",\n            sx: {\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 26\n              }, this),\n              type: \"submit\",\n              disabled: !newMessage.trim() || !username || isPrivateMessage && !selectedUser,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), isPrivateMessage && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => {\n                setIsPrivateMessage(false);\n                setSelectedUser('');\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 3000,\n      onClose: () => setNotification({\n        ...notification,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setNotification({\n          ...notification,\n          open: false\n        }),\n        severity: notification.severity,\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteRoom, \"42b4OZpfEjA9A4znF/WjHQN7rpU=\", false, function () {\n  return [useParams];\n});\n_c = NoteRoom;\nexport default NoteRoom;\nvar _c;\n$RefreshReg$(_c, \"NoteRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","io","Box","Paper","TextField","Typography","Chip","Snackbar","Alert","Grid","Button","List","ListItem","ListItemText","Divider","Select","MenuItem","FormControl","InputLabel","IconButton","Tooltip","ContentCopyIcon","SendIcon","PersonIcon","LockIcon","jsxDEV","_jsxDEV","SOCKET_URL","NoteRoom","_s","roomId","note","setNote","socket","setSocket","notification","setNotification","open","message","severity","messages","setMessages","newMessage","setNewMessage","username","setUsername","onlineUsers","setOnlineUsers","selectedUser","setSelectedUser","isPrivateMessage","setIsPrivateMessage","noteRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","storedUsername","localStorage","getItem","newUsername","prompt","setItem","newSocket","emit","fetch","then","res","json","data","content","catch","err","console","error","on","users","filter","user","userId","id","prev","close","handleNoteChange","e","newContent","target","value","handleSendMessage","preventDefault","trim","isPrivate","recipientId","copyRoomId","navigator","clipboard","writeText","formatMessage","msg","recipientUsername","container","spacing","sx","height","children","item","xs","md","display","flexDirection","mb","alignItems","gap","variant","fileName","_jsxFileName","lineNumber","columnNumber","icon","label","onClick","color","elevation","p","flex","multiline","fullWidth","onChange","placeholder","inputRef","borderBottom","borderColor","gutterBottom","dense","map","mr","fontSize","primary","title","size","overflow","index","Fragment","ml","secondary","component","ref","onSubmit","borderTop","endIcon","type","disabled","autoHideDuration","onClose","width","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/socket/frontend/src/pages/NoteRoom.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Chip,\r\n  Snackbar,\r\n  Alert,\r\n  Grid,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\n\r\nconst SOCKET_URL = 'http://localhost:5000';\r\n\r\nfunction NoteRoom() {\r\n  const { roomId } = useParams();\r\n  const [note, setNote] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [isPrivateMessage, setIsPrivateMessage] = useState(false);\r\n  const noteRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Get username from localStorage or prompt for it\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    } else {\r\n      const newUsername = prompt('Please enter your username:');\r\n      if (newUsername) {\r\n        setUsername(newUsername);\r\n        localStorage.setItem('username', newUsername);\r\n      }\r\n    }\r\n\r\n    const newSocket = io(SOCKET_URL);\r\n    setSocket(newSocket);\r\n\r\n    // Join room with username\r\n    newSocket.emit('join-room', { roomId, username });\r\n\r\n    // Fetch initial note content\r\n    fetch(`http://localhost:5000/api/notes/${roomId}`)\r\n      .then(res => res.json())\r\n      .then(data => setNote(data.content || ''))\r\n      .catch(err => console.error('Error fetching note:', err));\r\n\r\n    // Fetch initial chat messages\r\n    fetch(`http://localhost:5000/api/chat/${roomId}`)\r\n      .then(res => res.json())\r\n      .then(data => setMessages(data))\r\n      .catch(err => console.error('Error fetching chat messages:', err));\r\n\r\n    // Listen for note updates\r\n    newSocket.on('note-updated', (data) => {\r\n      setNote(data.content);\r\n    });\r\n\r\n    // Listen for user join notifications\r\n    newSocket.on('user-joined', (data) => {\r\n      setNotification({\r\n        open: true,\r\n        message: `${data.username} joined the room`,\r\n        severity: 'info'\r\n      });\r\n    });\r\n\r\n    // Listen for user leave notifications\r\n    newSocket.on('user-left', (data) => {\r\n      setNotification({\r\n        open: true,\r\n        message: `${data.username} left the room`,\r\n        severity: 'info'\r\n      });\r\n    });\r\n\r\n    // Listen for room users updates\r\n    newSocket.on('room-users', (users) => {\r\n      setOnlineUsers(users.filter(user => user.userId !== newSocket.id));\r\n    });\r\n\r\n    // Listen for new chat messages\r\n    newSocket.on('new-chat-message', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, [roomId, username]);\r\n\r\n  const handleNoteChange = (e) => {\r\n    const newContent = e.target.value;\r\n    setNote(newContent);\r\n\r\n    if (socket) {\r\n      socket.emit('note-update', {\r\n        roomId,\r\n        content: newContent\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (newMessage.trim() && socket && username) {\r\n      socket.emit('chat-message', {\r\n        roomId,\r\n        userId: socket.id,\r\n        username,\r\n        message: newMessage.trim(),\r\n        isPrivate: isPrivateMessage,\r\n        recipientId: isPrivateMessage ? selectedUser : null\r\n      });\r\n      setNewMessage('');\r\n      setIsPrivateMessage(false);\r\n      setSelectedUser('');\r\n    }\r\n  };\r\n\r\n  const copyRoomId = () => {\r\n    navigator.clipboard.writeText(roomId);\r\n    setNotification({\r\n      open: true,\r\n      message: 'Room ID copied to clipboard!',\r\n      severity: 'success'\r\n    });\r\n  };\r\n\r\n  const formatMessage = (msg) => {\r\n    if (msg.isPrivate) {\r\n      return `[Private to ${msg.recipientUsername}] ${msg.message}`;\r\n    }\r\n    return msg.message;\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} sx={{ height: 'calc(100vh - 100px)' }}>\r\n      <Grid item xs={12} md={8}>\r\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 2 }}>\r\n            <Typography variant=\"h5\">Room: {roomId}</Typography>\r\n            <Chip\r\n              icon={<ContentCopyIcon />}\r\n              label=\"Copy Room ID\"\r\n              onClick={copyRoomId}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 2,\r\n              flex: 1,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <TextField\r\n              multiline\r\n              fullWidth\r\n              value={note}\r\n              onChange={handleNoteChange}\r\n              variant=\"outlined\"\r\n              placeholder=\"Start typing your note...\"\r\n              sx={{ flex: 1 }}\r\n              inputRef={noteRef}\r\n            />\r\n          </Paper>\r\n        </Box>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <Paper elevation={3} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <Typography variant=\"h6\" sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\r\n            Chat\r\n          </Typography>\r\n          \r\n          {/* Online Users List */}\r\n          <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\r\n            <Typography variant=\"subtitle2\" color=\"primary\" gutterBottom>\r\n              Online Users\r\n            </Typography>\r\n            <List dense>\r\n              {onlineUsers.map((user) => (\r\n                <ListItem key={user.userId}>\r\n                  <PersonIcon sx={{ mr: 1, fontSize: 20 }} />\r\n                  <ListItemText primary={user.username} />\r\n                  <Tooltip title=\"Send Private Message\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        setSelectedUser(user.userId);\r\n                        setIsPrivateMessage(true);\r\n                      }}\r\n                    >\r\n                      <LockIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n\r\n          {/* Chat Messages */}\r\n          <List sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n            {messages.map((msg, index) => (\r\n              <React.Fragment key={index}>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle2\" color=\"primary\">\r\n                        {msg.username}\r\n                        {msg.isPrivate && (\r\n                          <Chip\r\n                            size=\"small\"\r\n                            label=\"Private\"\r\n                            color=\"secondary\"\r\n                            sx={{ ml: 1 }}\r\n                          />\r\n                        )}\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography variant=\"body2\" color=\"text.primary\">\r\n                        {formatMessage(msg)}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              </React.Fragment>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </List>\r\n\r\n          {/* Message Input */}\r\n          <Box component=\"form\" onSubmit={handleSendMessage} sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n            {isPrivateMessage && (\r\n              <FormControl fullWidth size=\"small\" sx={{ mb: 1 }}>\r\n                <InputLabel>Send to</InputLabel>\r\n                <Select\r\n                  value={selectedUser}\r\n                  label=\"Send to\"\r\n                  onChange={(e) => setSelectedUser(e.target.value)}\r\n                >\r\n                  {onlineUsers.map((user) => (\r\n                    <MenuItem key={user.userId} value={user.userId}>\r\n                      {user.username}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n            <TextField\r\n              fullWidth\r\n              size=\"small\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder={isPrivateMessage ? \"Type a private message...\" : \"Type a message...\"}\r\n              sx={{ mb: 1 }}\r\n            />\r\n            <Box sx={{ display: 'flex', gap: 1 }}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                endIcon={<SendIcon />}\r\n                type=\"submit\"\r\n                disabled={!newMessage.trim() || !username || (isPrivateMessage && !selectedUser)}\r\n              >\r\n                Send\r\n              </Button>\r\n              {isPrivateMessage && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    setIsPrivateMessage(false);\r\n                    setSelectedUser('');\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setNotification({ ...notification, open: false })}\r\n          severity={notification.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NoteRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}