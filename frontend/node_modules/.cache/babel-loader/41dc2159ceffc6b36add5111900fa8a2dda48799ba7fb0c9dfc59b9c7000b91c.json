{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\socket\\\\frontend\\\\src\\\\pages\\\\NoteRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { Box, Paper, TextField, Typography, Chip, Snackbar, Alert, Grid, Button, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:5000';\nfunction NoteRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [note, setNote] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const noteRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Get username from localStorage or prompt for it\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    } else {\n      const newUsername = prompt('Please enter your username:');\n      if (newUsername) {\n        setUsername(newUsername);\n        localStorage.setItem('username', newUsername);\n      }\n    }\n    const newSocket = io(SOCKET_URL);\n    setSocket(newSocket);\n\n    // Join room\n    newSocket.emit('join-room', roomId);\n\n    // Fetch initial note content\n    fetch(`http://localhost:5000/api/notes/${roomId}`).then(res => res.json()).then(data => setNote(data.content || '')).catch(err => console.error('Error fetching note:', err));\n\n    // Fetch initial chat messages\n    fetch(`http://localhost:5000/api/chat/${roomId}`).then(res => res.json()).then(data => setMessages(data)).catch(err => console.error('Error fetching chat messages:', err));\n\n    // Listen for note updates\n    newSocket.on('note-updated', data => {\n      setNote(data.content);\n    });\n\n    // Listen for user join notifications\n    newSocket.on('user-joined', data => {\n      setNotification({\n        open: true,\n        message: 'New user joined the room',\n        severity: 'info'\n      });\n    });\n\n    // Listen for new chat messages\n    newSocket.on('new-chat-message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    return () => {\n      newSocket.close();\n    };\n  }, [roomId]);\n  const handleNoteChange = e => {\n    const newContent = e.target.value;\n    setNote(newContent);\n    if (socket) {\n      socket.emit('note-update', {\n        roomId,\n        content: newContent\n      });\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim() && socket && username) {\n      socket.emit('chat-message', {\n        roomId,\n        userId: socket.id,\n        username,\n        message: newMessage.trim()\n      });\n      setNewMessage('');\n    }\n  };\n  const copyRoomId = () => {\n    navigator.clipboard.writeText(roomId);\n    setNotification({\n      open: true,\n      message: 'Room ID copied to clipboard!',\n      severity: 'success'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {\n      height: 'calc(100vh - 100px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            icon: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this),\n            label: \"Copy Room ID\",\n            onClick: copyRoomId,\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            fullWidth: true,\n            value: note,\n            onChange: handleNoteChange,\n            variant: \"outlined\",\n            placeholder: \"Start typing your note...\",\n            sx: {\n              flex: 1\n            },\n            inputRef: noteRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            p: 2,\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            flex: 1,\n            overflow: 'auto',\n            p: 2\n          },\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  color: \"primary\",\n                  children: msg.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.primary\",\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSendMessage,\n          sx: {\n            p: 2,\n            borderTop: 1,\n            borderColor: 'divider'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            sx: {\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 24\n            }, this),\n            type: \"submit\",\n            disabled: !newMessage.trim() || !username,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 3000,\n      onClose: () => setNotification({\n        ...notification,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setNotification({\n          ...notification,\n          open: false\n        }),\n        severity: notification.severity,\n        sx: {\n          width: '100%'\n        },\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteRoom, \"kt0ncvNU6/Bi8tU8RvnTfHNu7uE=\", false, function () {\n  return [useParams];\n});\n_c = NoteRoom;\nexport default NoteRoom;\nvar _c;\n$RefreshReg$(_c, \"NoteRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","io","Box","Paper","TextField","Typography","Chip","Snackbar","Alert","Grid","Button","List","ListItem","ListItemText","Divider","ContentCopyIcon","SendIcon","jsxDEV","_jsxDEV","SOCKET_URL","NoteRoom","_s","roomId","note","setNote","socket","setSocket","notification","setNotification","open","message","severity","messages","setMessages","newMessage","setNewMessage","username","setUsername","noteRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","storedUsername","localStorage","getItem","newUsername","prompt","setItem","newSocket","emit","fetch","then","res","json","data","content","catch","err","console","error","on","prev","close","handleNoteChange","e","newContent","target","value","handleSendMessage","preventDefault","trim","userId","id","copyRoomId","navigator","clipboard","writeText","container","spacing","sx","height","children","item","xs","md","display","flexDirection","mb","alignItems","gap","variant","fileName","_jsxFileName","lineNumber","columnNumber","icon","label","onClick","color","elevation","p","flex","multiline","fullWidth","onChange","placeholder","inputRef","borderBottom","borderColor","overflow","map","msg","index","Fragment","primary","secondary","component","ref","onSubmit","borderTop","size","endIcon","type","disabled","autoHideDuration","onClose","width","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/socket/frontend/src/pages/NoteRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Chip,\r\n  Snackbar,\r\n  Alert,\r\n  Grid,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n} from '@mui/material';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst SOCKET_URL = 'http://localhost:5000';\r\n\r\nfunction NoteRoom() {\r\n  const { roomId } = useParams();\r\n  const [note, setNote] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const noteRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Get username from localStorage or prompt for it\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    } else {\r\n      const newUsername = prompt('Please enter your username:');\r\n      if (newUsername) {\r\n        setUsername(newUsername);\r\n        localStorage.setItem('username', newUsername);\r\n      }\r\n    }\r\n\r\n    const newSocket = io(SOCKET_URL);\r\n    setSocket(newSocket);\r\n\r\n    // Join room\r\n    newSocket.emit('join-room', roomId);\r\n\r\n    // Fetch initial note content\r\n    fetch(`http://localhost:5000/api/notes/${roomId}`)\r\n      .then(res => res.json())\r\n      .then(data => setNote(data.content || ''))\r\n      .catch(err => console.error('Error fetching note:', err));\r\n\r\n    // Fetch initial chat messages\r\n    fetch(`http://localhost:5000/api/chat/${roomId}`)\r\n      .then(res => res.json())\r\n      .then(data => setMessages(data))\r\n      .catch(err => console.error('Error fetching chat messages:', err));\r\n\r\n    // Listen for note updates\r\n    newSocket.on('note-updated', (data) => {\r\n      setNote(data.content);\r\n    });\r\n\r\n    // Listen for user join notifications\r\n    newSocket.on('user-joined', (data) => {\r\n      setNotification({\r\n        open: true,\r\n        message: 'New user joined the room',\r\n        severity: 'info'\r\n      });\r\n    });\r\n\r\n    // Listen for new chat messages\r\n    newSocket.on('new-chat-message', (data) => {\r\n      setMessages(prev => [...prev, data]);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const handleNoteChange = (e) => {\r\n    const newContent = e.target.value;\r\n    setNote(newContent);\r\n\r\n    if (socket) {\r\n      socket.emit('note-update', {\r\n        roomId,\r\n        content: newContent\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (newMessage.trim() && socket && username) {\r\n      socket.emit('chat-message', {\r\n        roomId,\r\n        userId: socket.id,\r\n        username,\r\n        message: newMessage.trim()\r\n      });\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  const copyRoomId = () => {\r\n    navigator.clipboard.writeText(roomId);\r\n    setNotification({\r\n      open: true,\r\n      message: 'Room ID copied to clipboard!',\r\n      severity: 'success'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} sx={{ height: 'calc(100vh - 100px)' }}>\r\n      <Grid item xs={12} md={8}>\r\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 2 }}>\r\n            <Typography variant=\"h5\">Room: {roomId}</Typography>\r\n            <Chip\r\n              icon={<ContentCopyIcon />}\r\n              label=\"Copy Room ID\"\r\n              onClick={copyRoomId}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 2,\r\n              flex: 1,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <TextField\r\n              multiline\r\n              fullWidth\r\n              value={note}\r\n              onChange={handleNoteChange}\r\n              variant=\"outlined\"\r\n              placeholder=\"Start typing your note...\"\r\n              sx={{ flex: 1 }}\r\n              inputRef={noteRef}\r\n            />\r\n          </Paper>\r\n        </Box>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <Paper elevation={3} sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n          <Typography variant=\"h6\" sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\r\n            Chat\r\n          </Typography>\r\n          <List sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n            {messages.map((msg, index) => (\r\n              <React.Fragment key={index}>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle2\" color=\"primary\">\r\n                        {msg.username}\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography variant=\"body2\" color=\"text.primary\">\r\n                        {msg.message}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\" />\r\n              </React.Fragment>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </List>\r\n          <Box component=\"form\" onSubmit={handleSendMessage} sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n            <TextField\r\n              fullWidth\r\n              size=\"small\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type a message...\"\r\n              sx={{ mb: 1 }}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              endIcon={<SendIcon />}\r\n              type=\"submit\"\r\n              disabled={!newMessage.trim() || !username}\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setNotification({ ...notification, open: false })}\r\n          severity={notification.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NoteRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}